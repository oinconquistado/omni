generator sharedClient {
  provider = "prisma-client-js"
  output   = "../src/generated/shared-client"
}

datasource sharedDb {
  provider = "postgresql"
  url      = env("SHARED_DATABASE_URL")
}

enum ClientUserRole {
  ADMIN
  SALESPERSON

  @@map("client_user_roles")
}

enum ClientUserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED

  @@map("client_user_statuses")
}

model ClientUser {
  id        String           @id @default(cuid())
  tenantId  String           @map("tenant_id")
  email     String           
  name      String
  role      ClientUserRole   @default(SALESPERSON)
  status    ClientUserStatus @default(ACTIVE)
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")

  sessions ClientSession[]

  @@unique([tenantId, email], name: "unique_email_per_tenant")
  @@map("client_users")
}

model ClientSession {
  id           String   @id @default(cuid())
  tenantId     String   @map("tenant_id")
  clientUserId String   @map("client_user_id")
  token        String   @unique
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")

  clientUser ClientUser @relation(fields: [clientUserId], references: [id], onDelete: Cascade)

  @@map("client_sessions")
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  DISCONTINUED

  @@map("product_statuses")
}

model Product {
  id          String        @id @default(cuid())
  tenantId    String        @map("tenant_id")
  sku         String
  name        String
  description String?
  price       Decimal       @sharedDb.Decimal(10, 2)
  status      ProductStatus @default(ACTIVE)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")

  @@unique([tenantId, sku], name: "unique_sku_per_tenant")
  @@map("products")
}

model Category {
  id          String   @id @default(cuid())
  tenantId    String   @map("tenant_id")
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([tenantId, name], name: "unique_category_per_tenant")
  @@map("categories")
}

model Stock {
  id            String   @id @default(cuid())
  tenantId      String   @map("tenant_id")
  productId     String   @map("product_id")
  quantity      Int      @default(0)
  reservedQty   Int      @default(0) @map("reserved_qty")
  availableQty  Int      @default(0) @map("available_qty")
  reorderLevel  Int?     @map("reorder_level")
  maxStockLevel Int?     @map("max_stock_level")
  lastUpdated   DateTime @default(now()) @map("last_updated")

  @@unique([tenantId, productId], name: "unique_stock_per_product")
  @@map("stock")
}